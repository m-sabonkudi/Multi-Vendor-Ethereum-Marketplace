Start
  ↓
Buyer initiates purchase:
  - Calls makeTransaction(productPrice, seller) with ETH
  - Checks: msg.value >= productPrice?
    → No: Revert (InsufficientAmount)
    → Yes:
      - If msg.value > productPrice:
        → Refund surplus or credit buyer balance
      - Create Transaction (Status = Pending)
  ↓
Seller marks item as shipped:
  - Calls deliver(transactionId)
  - Checks:
    - Caller == seller?
    - Status == Pending?
    → Else revert
  - Set Status = Delivered
  ↓
Buyer reacts:
  - If satisfied within 24h:
    → Calls satisfy(transactionId)
      - Checks: Caller == buyer, Status == Delivered
      - Set Status = Confirmed, record confirmedAt timestamp
  - Else (not satisfied within 24h):
    → Calls dispute(transactionId)
      - Checks: Caller == buyer, Status == Confirmed, within 24h after confirmedAt
      - Set Status = Disputed
  ↓
If Disputed:
  - Seller confirms return:
    → Calls sellerConfirm(transactionId)
    - Checks: Caller == seller, Status == Disputed
    - Set Status = Cancelled
    - Refund buyer amount (sendMoney)
  ↓
If Confirmed and 24h passed:
  - Seller claims payment:
    → Calls claim(transactionId)
    - Checks: Caller == seller, Status == Confirmed, 24h passed since confirmedAt
    - Set Status = Finalized
    - sendMoney to seller
  ↓
Withdraw flow:
  - User (buyer or seller) can withdraw from balance anytime:
    → Calls withdraw(amount)
    - Checks: balance >= amount
    - Sends ETH to user, reduces balance
  ↓
End